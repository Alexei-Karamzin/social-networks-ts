{"version":3,"file":"static/js/721.4b981688.chunk.js","mappings":"yOACA,KCAA,GAAgB,IAAM,0B,mBCMTA,EAAyB,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,aAE5C,GAAgCC,EAAAA,EAAAA,WAAkB,GAAlD,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,UAAiB,IAAnD,eAAkBG,GAAlB,YAEAC,EAAAA,EAAAA,YAAU,WACND,EAAaL,KACd,CAACA,IAWJ,OACI,sCAEMG,IACE,0BACI,iBAAMI,cAAe,kBAAMH,GAAY,IAAvC,SAA+CJ,MAGtDG,IACG,0BACI,kBACIK,SAAU,SAACC,GAAD,OAfCC,EAe4BD,EAAEE,cAAcD,WAdvEL,EAAaK,GADa,IAACA,GAgBXE,WAAW,EACXC,OAtBc,WAC9BT,GAAY,GACZH,EAAaD,IAqBGU,MAAOV,GAAU,WC5B5Bc,EAAc,SAAC,GAKK,IAAD,MAHxBC,EAGwB,EAHxBA,QACAf,EAEwB,EAFxBA,OACAC,EACwB,EADxBA,aAGJ,OACI,+BACI,iBAAKe,UAAWC,EAAAA,IAAhB,WACI,gBAAKC,IAAG,OAAEH,QAAF,IAAEA,GAAF,UAAEA,EAASI,cAAX,aAAE,EAAiBC,SAC3B,SAACrB,EAAD,CAAwBC,OAAQA,EACRC,aAAcA,KAEtC,0BACI,6CAAcc,QAAd,IAAcA,OAAd,EAAcA,EAASM,cAE3B,0BACI,8CAAeN,QAAf,IAAeA,OAAf,EAAeA,EAASO,eAE5B,+CAEI,4BACI,wCACsB,OAAPP,QAAO,IAAPA,GAAA,UAAAA,EAASQ,gBAAT,SAAmBC,SAAWT,EAAQQ,SAASC,SAAW,UAEzE,kCACgB,OAAPT,QAAO,IAAPA,GAAA,UAAAA,EAASQ,gBAAT,SAAmBE,GAAKV,EAAQQ,SAASE,GAAK,qB,UCrC/E,KCAA,EAAiD,mBCOpCC,EAAY,SAACC,GAEtB,OAAO,0BACJ,iBAAKX,UAAWC,EAAhB,WAA8B,gBAAKC,IAAI,sFACrCS,EAAMC,SACJ,2BACKD,EAAME,WADX,iB,oBCAEC,EAAUC,EAAAA,MAAW,YAIZ,IAFdC,EAEa,EAFbA,aACAC,EACa,EADbA,UAEEC,GAAWC,EAAAA,EAAAA,KACjB,GAA0BjC,EAAAA,EAAAA,UAAwB,MAAlD,eAAckC,GAAd,WAEMC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,KAAM,IAEVC,SAAU,SAAAC,GAENC,QAAQC,IAAIF,GAEe,KAAvBA,EAAOF,KAAKK,QACZX,EAASD,EAAUS,EAAOF,OAC1BH,EAAOS,aAEPV,EAAS,UAKjBW,EAAef,EAAagB,KAAI,SAAAC,GAAC,OAAI,SAACvB,EAAD,CACYE,QAASqB,EAAErB,QACXC,WAAYoB,EAAEpB,YAFfoB,EAAEC,OAKtD,OACI,iBAAMT,SAAUJ,EAAOc,aAAvB,UACI,iBAAKnC,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,QAAhB,uBACA,qBAAUiC,GAAG,OACHE,KAAK,OACL5C,SAAU6B,EAAOgB,aACjB3C,MAAO2B,EAAOK,OAAOF,QAE/B,mBAAQc,KAAK,SAAb,uBACCP,U,UCxCJQ,GAAmBC,EAAAA,EAAAA,KAPR,SAACC,GACrB,MAAO,CACHzB,aAAcyB,EAAMC,YAAYC,MAChC1B,UAAWA,EAAAA,MAIauB,CAAyB1B,GCD5C8B,EAAU,SAAC,GAKK,IAHrB7C,EAGoB,EAHpBA,QACAf,EAEoB,EAFpBA,OACAC,EACoB,EADpBA,aAGJ,OAAO,iBAAKe,UAAWC,EAAAA,QAAhB,WACH,SAACH,EAAD,CAAaC,QAASA,EACTf,OAAQA,EACRC,aAAcA,KAE3B,SAACsD,EAAD,Q,wCCKFM,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAeD,OAfCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAYFC,oBAAsB,SAACpD,IAEnBqD,EAD2B,EAAKpC,MAAzBoC,kBACUrD,IACpB,EAYA,OAZA,yCAbD,WACI,MAAkEsD,KAAKrC,MAAhEsC,EAAP,EAAOA,iBAAkBC,EAAzB,EAAyBA,eAAgBC,EAAzC,EAAyCA,cACrCC,EADJ,EAAwDC,OACpCC,OAAOpB,GACtBkB,IACDA,EAASH,GAEbC,EAAeE,GACfD,EAAcC,KACjB,oBAOD,WACI,OACI,0BACI,SAACR,GAAD,kBAAaI,KAAKrC,OAAlB,IACSZ,QAASiD,KAAKrC,MAAMZ,QACpBf,OAAQgE,KAAKrC,MAAM3B,OACnBC,aAAc+D,KAAKF,6BAIvC,EA3BCD,CAAyB9B,EAAAA,WA2C/B,GAAewC,EAAAA,EAAAA,IACXC,EAAAA,GCtEsB,SAACC,GAavB,OAZA,SAAiC9C,GAC7B,IAAI+C,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXP,GAASQ,EAAAA,EAAAA,MACb,OACI,SAACL,GAAD,kBACQ9C,GADR,IAEI0C,OAAQ,CAAEK,SAAAA,EAAUE,SAAAA,EAAUN,OAAAA,UDgE1Cd,EAAAA,EAAAA,KAhBoB,SAACC,GAAD,MAA8B,CAClD1C,QAAS0C,EAAMC,YAAY3C,QAC3Bf,OAAQyD,EAAMC,YAAY1D,OAC1BiE,iBAAkBR,EAAMsB,KAAK7B,GAC7B8B,OAAQvB,EAAMsB,KAAKC,WAGI,SAAC9C,GAAD,MAAgC,CACvDgC,eAAgB,SAACE,GAAD,OAAoBa,EAAAA,EAAAA,IAAiBb,IACrDD,cAAe,SAACC,GAAD,OAAoBlC,GAASgD,EAAAA,EAAAA,IAAgBd,KAC5DL,iBAAkB,SAACrD,GAAD,OAAmBwB,GAASiD,EAAAA,EAAAA,IAAmBzE,SAGrE,CAIEmD,I,iIEnEEuB,EAA6B,SAAC3B,GAAD,MAAmD,CAChFuB,OAAQvB,EAAMsB,KAAKC,SAGhB,SAASR,EAAoBC,GAYhC,OADmCjB,EAAAA,EAAAA,IAAQ4B,EAAR5B,EAVT,SAAC7B,GACvB,IAAKqD,EAAwBrD,EAAxBqD,OAAWK,GAAhB,OAA6B1D,EAA7B,GAEA,OAAKqD,GAGM,SAACP,GAAD,UAAeY,KAFf,SAAC,KAAD,CAAUC,GAAG,gB,qBCjBjB,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,oGEbM,SAASW,EAAeC,EAAKb,GAC1C,OCLa,SAAyBa,GACtC,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKb,GACjD,IAAIgB,EAAY,MAAPH,EAAc,KAAyB,qBAAXI,QAA0BJ,EAAII,OAAOC,WAAaL,EAAI,cAE3F,GAAU,MAANG,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGL,KAAKE,KAAQS,GAAMH,EAAKH,EAAGQ,QAAQC,QAC9CJ,EAAKK,KAAKP,EAAGpG,QAETiF,GAAKqB,EAAKhB,SAAWL,GAH4BsB,GAAK,IAK5D,MAAOK,GACPJ,GAAK,EACLH,EAAKO,EACL,QACA,IACOL,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBR,EAAKb,KAAM,EAAA4B,EAAA,GAA2Bf,EAAKb,IGLjF,WACb,MAAM,IAAI6B,UAAU,6IHIgF","sources":["Components/Profile/Profile.module.css","webpack://social-networks-ts/./src/Components/Profile/ProfileInfo.module.css?9b14","Components/Profile/ProfileStatusWithHooks.tsx","Components/Profile/ProfileInfo.tsx","Components/MyPosts/MyPosts.module.css","webpack://social-networks-ts/./src/Components/MyPosts/Posts/Post.module.css?8a8b","Components/MyPosts/Posts/Post.tsx","Components/MyPosts/MyPosts.tsx","Components/MyPosts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","Components/Profile/WithRouter.tsx","hoc/withAuthRedirect.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"ProfileInfo_img__EWyJv\"};","import React, {useEffect, useState} from \"react\";\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks = ({status, updateStatus}: PropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [newStatus, setNewStatus] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        setNewStatus(status)\r\n    }, [status])\r\n\r\n    const deactivateEditModeHandler = () => {\r\n        setEditMode(false)\r\n        updateStatus(status)\r\n    }\r\n\r\n    const onStatusChangeHandler = (value: string) => {\r\n        setNewStatus(value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Status:\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={() => setEditMode(true)}>{status}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={(e) => onStatusChangeHandler(e.currentTarget.value)}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditModeHandler}\r\n                        value={status || ''}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\nimport {UserProfileType} from \"../../trash/store\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: UserProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileInfo = (\r\n    {\r\n        profile,\r\n        status,\r\n        updateStatus\r\n    }: ProfileInfoPropsType) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.ava}>\r\n                <img src={profile?.photos?.large}/>\r\n                <ProfileStatusWithHooks status={status}\r\n                                        updateStatus={updateStatus}\r\n                />\r\n                <div>\r\n                    <p>About me: {profile?.aboutMe}</p>\r\n                </div>\r\n                <div>\r\n                    <p>Full Name: {profile?.fullName}</p>\r\n                </div>\r\n                <div>\r\n                    Social networks:\r\n                    <div>\r\n                        <div>\r\n                            Facebook: {profile?.contacts?.facebook ? profile.contacts.facebook : '???'}\r\n                        </div>\r\n                        <div>\r\n                            vk: {profile?.contacts?.vk ? profile.contacts.vk : '???'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__yNFZ6\",\"item\":\"Post_item__H1oZ9\"};","import React from \"react\";\r\nimport classes from './Post.module.css';\r\n\r\ntype MessageType = {\r\n    message:string,\r\n    LikeCounts:number\r\n}\r\n\r\nexport const Post: any = (props: MessageType) => {\r\n\r\n    return <div>\r\n       <div className={classes.item}><img src='https://img2.fonwall.ru/o/tp/abstract-digital-art-deviantart.jpeg?route=mid&h=750'/>\r\n        {props.message}\r\n           <div>\r\n               {props.LikeCounts} Like\r\n           </div>\r\n       </div>\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport classes from './MyPosts.module.css';\r\nimport {Post} from \"./Posts/Post\";\r\nimport {PostsType} from '../../trash/store'\r\nimport {useFormik} from \"formik\";\r\nimport {useAppDispatch} from \"../../Redux/redux-store\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nexport type PropsType = {\r\n    usersMessage: Array<PostsType>\r\n    addPostAC: (text: string) => AnyAction // ?\r\n}\r\n\r\nexport const MyPosts = React.memo((\r\n    {\r\n        usersMessage,\r\n        addPostAC\r\n    }: PropsType) => {\r\n    const dispatch = useAppDispatch()\r\n    const [error, setError] = useState<string | null>(null)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            text: '',\r\n        },\r\n        onSubmit: values => {\r\n\r\n            console.log(values)\r\n\r\n            if (values.text.trim() !== '') {\r\n                dispatch(addPostAC(values.text))\r\n                formik.resetForm();\r\n            } else {\r\n                setError('err')\r\n            }\r\n        },\r\n    })\r\n\r\n    let postsElement = usersMessage.map(p => <Post key={p.id}\r\n                                                         message={p.message}\r\n                                                         LikeCounts={p.LikeCounts}\r\n    />)\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className={classes.content}>\r\n                <div className={classes.MyPosts}>My posts</div>\r\n                <textarea id=\"text\"\r\n                          name=\"text\"\r\n                          onChange={formik.handleChange}\r\n                          value={formik.values.text}\r\n                />\r\n                <button type=\"submit\">Add posts</button>\r\n                {postsElement}\r\n            </div>\r\n        </form>\r\n    )\r\n})","import React from \"react\";\r\nimport {addPostAC} from \"../../Redux/reducer/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/redux-store\";\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        usersMessage: state.profilePage.posts,\r\n        addPostAC: addPostAC\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps)(MyPosts)\r\n\r\n\r\n/*\r\nexport const MyPostsContainer = (props: PropsType) => {\r\n\r\n    const usersMessage = props.store.getState().ProfilePage.posts\r\n    const newPostText = props.store.getState().ProfilePage.newPostText\r\n\r\n    const onClickAddPostHandler = () => {\r\n        props.store.dispatch(AddPostAC())\r\n    }\r\n\r\n    const onChangeTextareaHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.store.dispatch(UpdateTextPostAC(e.currentTarget.value))\r\n    }\r\n\r\n    return (\r\n        <MyPosts\r\n            usersMessage={usersMessage}\r\n            newPostText={newPostText}\r\n            onClickAddPostHandler={onClickAddPostHandler}\r\n            onChangeTextareaHandler={onChangeTextareaHandler}\r\n        />\r\n    )\r\n}\r\n*/\r\n","import React from \"react\";\r\nimport classes from './Profile.module.css';\r\nimport {ProfileInfo} from \"./ProfileInfo\";\r\nimport {MyPostsContainer} from \"../MyPosts/MyPostsContainer\";\r\nimport {UserProfileType} from \"../../trash/store\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: UserProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const Profile = (\r\n    {\r\n        profile,\r\n        status,\r\n        updateStatus\r\n    }: ProfilePropsType) => {\r\n\r\n    return <div className={classes.content}>\r\n        <ProfileInfo profile={profile}\r\n                     status={status}\r\n                     updateStatus={updateStatus}\r\n        />\r\n        <MyPostsContainer/>\r\n    </div>\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfileTC, getUserStatusTC, updateUserStatusTC} from \"../../Redux/reducer/profile-reducer\";\r\nimport {WithRouter} from \"./WithRouter\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {AppDispatchType, AppRootStateType} from \"../../Redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {UserProfileType} from \"../../trash/store\";\r\n\r\ntype mapStateToPropsType = {\r\n    profile: UserProfileType | null\r\n    status: string\r\n    authorizedUserId: number\r\n    isAuth: boolean\r\n}\r\n\r\ntype withRouterType = {\r\n    router: { location: any, navigate: any, params: any }\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getUserStatus: (userId: number) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\n\r\ntype ProfileContainerType = mapDispatchToPropsType & mapStateToPropsType & withRouterType\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerType> {\r\n\r\n    componentDidMount() {\r\n        const {authorizedUserId, getUserProfile, getUserStatus, router} = this.props\r\n        let userId = router.params.id\r\n        if (!userId) {\r\n            userId = authorizedUserId\r\n        }\r\n        getUserProfile(userId)\r\n        getUserStatus(userId)\r\n    }\r\n\r\n    updateStatusHandler = (value: string) => {\r\n        const {updateUserStatus} = this.props\r\n        updateUserStatus(value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.updateStatusHandler}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatchType) => ({\r\n    getUserProfile: (userId: number) => getUserProfileTC(userId),\r\n    getUserStatus: (userId: number) => dispatch(getUserStatusTC(userId)),\r\n    updateUserStatus: (value: string) => dispatch(updateUserStatusTC(value))\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    WithRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(ProfileContainer)\r\n\r\n","import React from \"react\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\n\r\nexport const WithRouter = (Component: any) => {\r\n    function ComponentWithRouterProp(props: any) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}","import React, {ComponentType} from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../Redux/redux-store\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: AppRootStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) {\r\n            return <Navigate to='/login'/>\r\n        } else {\r\n            return <Component {...restProps as T}/>\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectAuthRedirectComponent\r\n}\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["ProfileStatusWithHooks","status","updateStatus","useState","editMode","setEditMode","setNewStatus","useEffect","onDoubleClick","onChange","e","value","currentTarget","autoFocus","onBlur","ProfileInfo","profile","className","classes","src","photos","large","aboutMe","fullName","contacts","facebook","vk","Post","props","message","LikeCounts","MyPosts","React","usersMessage","addPostAC","dispatch","useAppDispatch","setError","formik","useFormik","initialValues","text","onSubmit","values","console","log","trim","resetForm","postsElement","map","p","id","handleSubmit","name","handleChange","type","MyPostsContainer","connect","state","profilePage","posts","Profile","ProfileContainer","updateStatusHandler","updateUserStatus","this","authorizedUserId","getUserProfile","getUserStatus","userId","router","params","compose","withAuthRedirect","Component","location","useLocation","navigate","useNavigate","useParams","auth","isAuth","getUserProfileTC","getUserStatusTC","updateUserStatusTC","mapStateToPropsForRedirect","restProps","to","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_slicedToArray","arr","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}