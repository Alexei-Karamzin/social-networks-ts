{"version":3,"file":"static/js/964.7a7c5f2d.chunk.js","mappings":"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","sources":["webpack://social-networks-ts/./src/Components/Dialogs/DialogItem/DialogsItem.module.css?3ebf","Components/Dialogs/DialogItem/DialogItem.tsx","webpack://social-networks-ts/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Message/AddMessageForm.tsx","Components/Dialogs/DialogsContainer.tsx","Components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ItemName\":\"DialogsItem_ItemName__xv00F\"};","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport classes from './DialogsItem.module.css';\r\n\r\ntype PropsType = {\r\n    DialogsDataId:number\r\n    DialogsDataName:string\r\n}\r\n\r\nexport const DialogItem = ({DialogsDataId, DialogsDataName}:PropsType) => {\r\n    return (\r\n        <div className={classes.ItemName}>\r\n            <NavLink to={'/Dialogs/' + DialogsDataId} className={classes.active}>{DialogsDataName}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__OZWQC\",\"messages\":\"Dialogs_messages__IPdKj\",\"dialogsItem\":\"Dialogs_dialogsItem__oTRPQ\"};","import classes from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\ntype MessageType = {\r\n    id:number,\r\n    item:string\r\n}\r\n\r\nexport const Message:any = (props:MessageType) => {\r\n    return (\r\n        <>\r\n            <div className={classes.message}>{props.item}</div>\r\n        </>\r\n    )\r\n}","import {MessageType} from \"../../../trash/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {Message} from \"./Message\";\r\nimport React from \"react\";\r\n\r\ntype AddMessageFormPropsType = {\r\n    dialogMassageData: Array<MessageType>,\r\n    onClickAddNewPostHandler: (e: string) => void,\r\n}\r\n\r\nexport const AddMessageForm = ({onClickAddNewPostHandler, dialogMassageData}: AddMessageFormPropsType) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            dialogForm: '',\r\n        },\r\n        onSubmit: values => {\r\n            onClickAddNewPostHandler(values.dialogForm)\r\n            formik.resetForm();\r\n        },\r\n    })\r\n\r\n    return <form onSubmit={formik.handleSubmit}>\r\n        <div style={{paddingLeft: '30px',paddingTop: '30px'}}>\r\n            {dialogMassageData.map(m => <Message key={m.id}\r\n                                                       id={m.id}\r\n                                                       item={m.title}\r\n            />)}\r\n            <textarea id=\"dialogForm\"\r\n                      name=\"dialogForm\"\r\n                      value={formik.values.dialogForm}\r\n                      onChange={formik.handleChange}\r\n            />\r\n            <button type=\"submit\">add massage</button>\r\n        </div>\r\n    </form>\r\n}","import React from \"react\";\r\nimport {AddMessageFromDialogAC} from \"../../Redux/reducer/dialog-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        dialogNameData: state.MessagePage.dialog,\r\n        dialogMassageData: state.MessagePage.message,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch:any) => {\r\n    return {\r\n        onClickAddNewPostHandler: (s: string)=>{dispatch(AddMessageFromDialogAC(s))},\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer\r\n\r\n\r\n","import React from \"react\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {DialogType, MessageType} from '../../trash/store'\r\nimport {AddMessageForm} from \"./Message/AddMessageForm\";\r\n\r\ntype PropsType = {\r\n    dialogNameData: Array<DialogType>\r\n    dialogMassageData: Array<MessageType>\r\n    onClickAddNewPostHandler: (e: string) => void\r\n}\r\n\r\nexport const Dialogs = (\r\n    {\r\n        dialogMassageData,\r\n        dialogNameData,\r\n        onClickAddNewPostHandler\r\n    }: PropsType) => {\r\n\r\n    return <div style={{display: 'flex'}}>\r\n\r\n        <div style={{borderRight: '2px solid #34050a', paddingLeft: '30px', paddingTop: '30px,color: #fdfdfd'}}>\r\n            {dialogNameData.map(element => <DialogItem key={element.id}\r\n                                                             DialogsDataId={element.id}\r\n                                                             DialogsDataName={element.name}\r\n                />\r\n            )\r\n            }\r\n\r\n        </div>\r\n        <AddMessageForm dialogMassageData={dialogMassageData}\r\n                        onClickAddNewPostHandler={onClickAddNewPostHandler}\r\n        />\r\n\r\n    </div>\r\n}\r\n\r\n","import React, {ComponentType} from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../Redux/redux-store\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: AppRootStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) {\r\n            return <Navigate to='/login'/>\r\n        } else {\r\n            return <Component {...restProps as T}/>\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectAuthRedirectComponent\r\n}\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["DialogItem","DialogsDataId","DialogsDataName","className","classes","to","Message","props","item","AddMessageForm","onClickAddNewPostHandler","dialogMassageData","formik","useFormik","initialValues","dialogForm","onSubmit","values","resetForm","handleSubmit","style","paddingLeft","paddingTop","map","m","id","title","name","value","onChange","handleChange","type","compose","connect","state","dialogNameData","MessagePage","dialog","message","dispatch","s","AddMessageFromDialogAC","withAuthRedirect","display","borderRight","element","mapStateToPropsForRedirect","isAuth","auth","Component","restProps","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}